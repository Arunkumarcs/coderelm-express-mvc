#!/usr/bin/env node

/**
 * Module dependencies.
 */
module.exports = async (app) => {
  var http = require('http');
  var appConfig = use('Config/App');
  var {Core} = use('Core/');

  /**
   * Get port from environment and store in Express.
   */
  var port = normalizePort(appConfig.port);
  app.set('port', port);

  /**
   * Create HTTP server.
   */
  var server = http.createServer(app);

  // sync() will create all table if they doesn't exist in database
  await Core.beforeServeProviders(server, app);
  server.listen(port);

  await Core.afterServeProviders(server, port);
  await Core.endProviders(server, port);

  /**
   * Normalize a port into a number, string, or false.
   */
  function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
      // named pipe
      return val;
    }

    if (port >= 0) {
      // port number
      return port;
    }

    return false;
  } 
};